package com.github.oceanc.mybatis3.generator.plugin;

import org.mybatis.generator.api.IntrospectedTable;
import org.mybatis.generator.api.PluginAdapter;
import org.mybatis.generator.api.dom.java.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Locale;

/**
 * Created by chengyang
 */
public class JacksonToJsonPlugin extends PluginAdapter {

    @Override
    public boolean validate(List<String> warnings) {
        return true;
    }

    @Override
    public boolean modelBaseRecordClassGenerated(TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
        Method method = new Method();
        method.setName("toJson");
        method.setVisibility(JavaVisibility.PUBLIC);
        method.setReturnType(FullyQualifiedJavaType.getStringInstance());
        method.addException(new FullyQualifiedJavaType("java.io.IOException"));
        method.addBodyLine("StringWriter writer = new StringWriter();");
        method.addBodyLine("JsonGenerator generator = new JsonFactory().createGenerator(writer);");
        method.addBodyLine("generator.setCodec(new ObjectMapper());");
        method.addBodyLine("generator.writeObject(this);");
        method.addBodyLine("generator.close();");
        method.addBodyLine("writer.close();");
        method.addBodyLine("return writer.toString();");
        this.addDoc(method, introspectedTable.getFullyQualifiedTableNameAtRuntime());

        topLevelClass.addImportedType(new FullyQualifiedJavaType("java.io.IOException"));
        topLevelClass.addImportedType(new FullyQualifiedJavaType("java.io.StringWriter"));
        topLevelClass.addImportedType(new FullyQualifiedJavaType("com.fasterxml.jackson.core.JsonFactory"));
        topLevelClass.addImportedType(new FullyQualifiedJavaType("com.fasterxml.jackson.core.JsonGenerator"));
        topLevelClass.addImportedType(new FullyQualifiedJavaType("com.fasterxml.jackson.databind.ObjectMapper"));

        topLevelClass.addMethod(method);

        log.debug("{} add method=toJson implement by Jackson2.", topLevelClass.getType().getShortName());
        return true;
    }

    private void addDoc(JavaElement element, String tableName) {
        String suppressAllComments = this.getContext().getCommentGeneratorConfiguration().getProperty("suppressAllComments");
        if (!"true".equals(suppressAllComments)) {
            String type = element.getClass() == Field.class ? "field" : "method";
            element.addJavaDocLine("/**");
            element.addJavaDocLine("* This " + type + " was generated by MyBatis Generator.");
            element.addJavaDocLine("* This " + type + " corresponds to the database table " + tableName);
            element.addJavaDocLine("*");
            element.addJavaDocLine("* @mbggenerated " + df.format(new Date()));
            element.addJavaDocLine("*/");
        }
    }

    private Logger log = LoggerFactory.getLogger(JacksonToJsonPlugin.class);

    private final SimpleDateFormat df = new SimpleDateFormat("EEE MMM ww HH:mm:ss z yyyy", Locale.US);

}
