package com.github.oceanc.mybatis3.generator.plugin;

import org.mybatis.generator.api.IntrospectedTable;
import org.mybatis.generator.api.PluginAdapter;
import org.mybatis.generator.api.dom.java.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Locale;

/**
 * Created by chengyang
 */
public class WhereSqlTextPlugin extends PluginAdapter {

    @Override
    public boolean validate(List<String> warnings) {
        return true;
    }

    @Override
    public boolean modelExampleClassGenerated(TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
        String sqlexp = introspectedTable.getTableConfigurationProperty(WHERE_SQL);
        if ("true".equals(sqlexp)) {
            for (InnerClass innerClass : topLevelClass.getInnerClasses()) {
                if (FullyQualifiedJavaType.getGeneratedCriteriaInstance().equals(innerClass.getType())) {
                    String tableName = introspectedTable.getFullyQualifiedTableNameAtRuntime();
                    Method method = new Method();
                    method.setName("addConditionSql");
                    method.setVisibility(JavaVisibility.PUBLIC);
                    method.setReturnType(FullyQualifiedJavaType.getCriteriaInstance());
                    method.addBodyLine("addCriterion(conditionSql);");
                    method.addBodyLine("return (Criteria) this;");
                    method.addParameter(new Parameter(FullyQualifiedJavaType.getStringInstance(), "conditionSql"));
                    this.addDoc(method, tableName);
                    innerClass.getMethods().add(method);

                    log.debug("{} add method=addConditionSql for custom sql statement in where clause.", topLevelClass.getType().getShortName());
                }
            }
        }
        return true;
    }

    private void addDoc(JavaElement element, String tableName) {
        String suppressAllComments = this.getContext().getCommentGeneratorConfiguration().getProperty("suppressAllComments");
        if (!"true".equals(suppressAllComments)) {
            String type = element.getClass() == Field.class ? "field" : "method";
            element.addJavaDocLine("/**");
            element.addJavaDocLine("* This " + type + " was generated by MyBatis Generator.");
            element.addJavaDocLine("* This " + type + " corresponds to the database table " + tableName);
            element.addJavaDocLine("*");
            element.addJavaDocLine("* @mbggenerated " + df.format(new Date()));
            element.addJavaDocLine("*/");
        }
    }

    private Logger log = LoggerFactory.getLogger(WhereSqlTextPlugin.class);

    private final SimpleDateFormat df = new SimpleDateFormat("EEE MMM ww HH:mm:ss z yyyy", Locale.US);
    private final static String WHERE_SQL = "whereSql";
}
