package oceanc.generator.mybatis3.plugin;

import org.mybatis.generator.api.IntrospectedTable;
import org.mybatis.generator.api.PluginAdapter;
import org.mybatis.generator.api.dom.java.*;
import org.mybatis.generator.api.dom.xml.TextElement;
import org.mybatis.generator.api.dom.xml.XmlElement;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Locale;

/**
 * Created by chengyang
 */
public class UpdateSqlTextOfUpdateSelectivePlugin extends PluginAdapter {

    @Override
    public boolean validate(List<String> warnings) {
        return true;
    }

    @Override
    public boolean modelBaseRecordClassGenerated(TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
        String sqlexp = introspectedTable.getTableConfigurationProperty(UPDATE_SQL);
        if ("true".equals(sqlexp)) {
            String tableName = introspectedTable.getFullyQualifiedTableNameAtRuntime();
            Field field = new Field();
            field.setName(UPDATE_SQL);
            field.setVisibility(JavaVisibility.PRIVATE);
            field.setType(FullyQualifiedJavaType.getStringInstance());
            this.addDoc(field, tableName);

            Method getter = new Method();
            getter.setName("get" + UPDATE_SQL.substring(0, 1).toUpperCase() + UPDATE_SQL.substring(1, UPDATE_SQL.length()));
            getter.setVisibility(JavaVisibility.PUBLIC);
            getter.setReturnType(FullyQualifiedJavaType.getStringInstance());
            getter.addBodyLine("return this." + UPDATE_SQL + ";");
            this.addDoc(getter, tableName);

            Method setter = new Method();
            setter.setName("set" + UPDATE_SQL.substring(0, 1).toUpperCase() + UPDATE_SQL.substring(1, UPDATE_SQL.length()));
            setter.setVisibility(JavaVisibility.PUBLIC);
            setter.setReturnType(null);
            setter.addBodyLine("this." + UPDATE_SQL + " = " + UPDATE_SQL + ";");
            setter.addParameter(new Parameter(FullyQualifiedJavaType.getStringInstance(), UPDATE_SQL));
            this.addDoc(setter, tableName);

            topLevelClass.addField(field);
            topLevelClass.addMethod(getter);
            topLevelClass.addMethod(setter);

            log.debug("{} add field={} and getter & setter related that is only effective in update selective model.", topLevelClass.getType().getShortName(), UPDATE_SQL);
        }
        return true;
    }

    @Override
    public boolean sqlMapUpdateByExampleSelectiveElementGenerated(XmlElement element, IntrospectedTable introspectedTable) {
        String sqlexp = introspectedTable.getTableConfigurationProperty(UPDATE_SQL);
        if ("true".equals(sqlexp)) {
            String node = "<if test=\"record.updateSql != null\" >\n" +
                    "        ${record.updateSql},\n" +
                    "      </if>";
            TextElement ele = new TextElement(node);
            XmlElement set = (XmlElement) element.getElements().get(1);
            set.getElements().add(ele);
        }
        return true;
    }

    private void addDoc(JavaElement element, String tableName) {
        String suppressAllComments = this.getContext().getCommentGeneratorConfiguration().getProperty("suppressAllComments");
        if (!"true".equals(suppressAllComments)) {
            String type = element.getClass() == Field.class ? "field" : "method";
            element.addJavaDocLine("/**");
            element.addJavaDocLine("* This " + type + " was generated by MyBatis Generator.");
            element.addJavaDocLine("* This " + type + " corresponds to the database table " + tableName);
            element.addJavaDocLine("*");
            element.addJavaDocLine("* @mbggenerated " + df.format(new Date()));
            element.addJavaDocLine("*/");
        }
    }

    private Logger log = LoggerFactory.getLogger(UpdateSqlTextOfUpdateSelectivePlugin.class);

    private final SimpleDateFormat df = new SimpleDateFormat("EEE MMM ww HH:mm:ss z yyyy", Locale.US);
    private final static String UPDATE_SQL = "updateSql";
}
